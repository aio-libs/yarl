parameters:
  artifact: dist
  github: ''

stages:
- stage: publish
  displayName: 'Publish'
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: none

    - bash: |
        echo '##vso[task.setvariable variable=gittag]`git describe --exact-match $(Build.SourceVersion)`'
      displayName: 'Match GitHub tag'

    - bash: |
        echo '$GITTAG'
      displayName: GitHub tag'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
      displayName: "Use Python 3.7"

    - script: |
        pip install -U twine
      displayName: 'Install twine'

    - task: DownloadBuildArtifacts@0
      displayName: 'Download distributions'
      inputs:
        buildType: current
        downloadType: single
        artifactName: ${{ parameters.artifact }}
        downloadPath: $(Build.ArtifactStagingDirectory)

    - script: |
        ls $(Build.ArtifactStagingDirectory)/dist
      displayName: 'Distributions list'

    - script: |
        python -m twine upload --verbose $(Build.ArtifactStagingDirectory)/dist/*
      displayName: 'Upload to PyPI'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: $(twine.token)

    - ${{ if ne(parameters.github, '') }}:
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: ${{ parameters.github }}
          assets: $(Build.ArtifactStagingDirectory)/dist/*
          addChangeLog: false
          # pre-release for alpha or beta
          isPreRelease: or(contains($[ variables.gittag ], 'a'), contains($[ variables.gittag ], 'b'))
