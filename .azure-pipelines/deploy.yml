trigger:
  branches:
    include:
    - refs/tags/*
pr: none

variables:
- group: codecov
python_versions: ["3.6", "3.7"]

stages:
# - stage: lint
#   displayName: "Run linters"
#   jobs:
#   - template: linters-template.yml

# - stage: test
#   displayName: "Run tests"
#   jobs:
#   - template: tests-template.yml
#     parameters:
#       codecov.token: '$(codecov.token)'

- stage: build
  displayName: "Build distributions"
  jobs:
  - job: tarball
    displayName: "Tarball"
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - checkout: self
        clean: true

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
        displayName: "Use Python 3.7"

      - script: |
          pip install -U setuptools wheel
        displayName: "Install tools"

      - script: |
          python setup.py sdist
        displayName: "Make tarball"

      - task: PublishBuildArtifacts@1
        displayName: "Publish tarball"
        inputs:
          pathtoPublish: 'dist'
          artifactName: dist

  - job: manylinux
    displayName: "Manylinux"
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - checkout: self
        clean: true

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
        displayName: "Use Python 3.7"

      - task: DockerInstaller@0
        inputs:
          dockerVersion: '18.03.1-ce'

      - script: |
          pip install -U setuptools wheel
        displayName: "Install tools"

      - script: |
          ./tools/run_docker.sh yaml
        displayName: Build manylinux wheels"

      - task: PublishBuildArtifacts@1
        displayName: "Publish manylinux"
        inputs:
          pathtoPublish: 'dist'
          artifactName: manylinux

  - job: win
    strategy:
      matrix:
        ${{ each python in ["3.6", "3.7"] }}:
          "py${{ python }}":
            python.version: ${{ python }}
    pool:
      vmImage: "windows-latest"
    steps:
      - template: build-wheel.yml
        parameters:
          python: "$(python.version)"
          steps:
            - script: |
                make cythonize
                python setup.py bdist_wheel
              displayName: "Make wheel"
              
- stage: publish
  displayName: "Publish distributions"
  jobs:
  - job:
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - script: |
        mkdir dist

    - task: DownloadBuildArtifacts@0
      displayName: "Download distributions"
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'dist'
        downloadPath: 'dist'

    - script: |
        tree .
        ls dist
