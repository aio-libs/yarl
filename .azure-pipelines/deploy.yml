trigger:
  branches:
    include:
    - refs/tags/*
pr: none

variables:
- group: codecov

resources:
  containers:
  - container: manylinux_64
    image: quay.io/pypa/manylinux1_x86_64
  - container: manylinux_86
    image: quay.io/pypa/manylinux1_i686

stages:
# - stage: lint
#   displayName: 'Run linters'
#   jobs:
#   - template: linters-template.yml

# - stage: test
#   displayName: 'Run tests'
#   jobs:
#   - template: tests-template.yml
#     parameters:
#       codecov.token: '$(codecov.token)'

- stage: build
  displayName: 'Build distributions'

  jobs:
  - job: tarball
    displayName: 'Tarball'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - template: build-wheel.yml
        parameters:
          steps:
            - script: |
                python setup.py sdist
              displayName: 'Make tarball'

  - job: manylinux
    displayName: 'Manylinux'
    strategy:
      matrix:
        py36 x64:
          python.code: 'cp36-cp36m'
        py37 x64:
          python.code: 'cp36-cp36m'
    pool:
      vmImage: 'ubuntu-latest'
    container: manylinux_64
    steps:
      - script: |
          /opt/python/$(python.code)/bin/python -m venv .build-venv
        displayName: 'Use Python $(python.code)'

      - script: |
          source .build-venv/bin/activate
          pip install -U setuptools wheel
        displayName: 'Install tools'

      - script: |
          source .build-venv/bin/activate
          make cythonize
          python setup.py bdist_wheel
        displayName: 'Make wheel'

      - script: |
          auditwheel repair dist/*.whl
        displayName: 'Repair wheel'

      - template: publish-wheel.yml

  - job:
    strategy:
      matrix:
        Win py36 x64:
          python.version: '3.6'
          python.architecture: 'x64'
          image: 'windows-latest'
        Win py37 x64:
          python.version: '3.7'
          python.architecture: 'x64'
          image: 'windows-latest'
        Win py36 x86:
          python.version: '3.6'
          python.architecture: 'x86'
          image: 'windows-latest'
        Win py37 x86:
          python.version: '3.7'
          python.architecture: 'x86'
          image: 'windows-latest'
        Mac py36:
          python.version: '3.6'
          image: 'macos-latest'
          python.architecture: 'x64'
        Mac py37:
          python.version: '3.7'
          image: 'macos-latest'
          python.architecture: 'x64'
    pool:
      vmImage: '$(image)'
    steps:
      - template: build-wheel.yml
        parameters:
          python: '$(python.version)'
          architecture: '$(python.architecture)'
          steps:
            - script: |
                make cythonize
                python setup.py bdist_wheel
              displayName: 'Make wheel'
              
- stage: publish
  displayName: 'Publish distributions'
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        mkdir dist

    - task: DownloadBuildArtifacts@0
      displayName: 'Download distributions'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'dist'
        downloadPath: 'dist'

    - script: |
        tree .
        ls dist
